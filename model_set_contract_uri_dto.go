/*
L3vels Api

L3vels API for Game developers

API version: 0.3
Contact: support@l3vels.xyz
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package l3vels-sdk

import (
	"encoding/json"
)

// checks if the SetContractUriDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SetContractUriDto{}

// SetContractUriDto struct for SetContractUriDto
type SetContractUriDto struct {
	// Project Id
	ProjectId string `json:"project_id"`
	// Collection Id
	CollectionId string `json:"collection_id"`
	// Contract URI
	ContractUri string `json:"contract_uri"`
}

// NewSetContractUriDto instantiates a new SetContractUriDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSetContractUriDto(projectId string, collectionId string, contractUri string) *SetContractUriDto {
	this := SetContractUriDto{}
	this.ProjectId = projectId
	this.CollectionId = collectionId
	this.ContractUri = contractUri
	return &this
}

// NewSetContractUriDtoWithDefaults instantiates a new SetContractUriDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSetContractUriDtoWithDefaults() *SetContractUriDto {
	this := SetContractUriDto{}
	return &this
}

// GetProjectId returns the ProjectId field value
func (o *SetContractUriDto) GetProjectId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value
// and a boolean to check if the value has been set.
func (o *SetContractUriDto) GetProjectIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProjectId, true
}

// SetProjectId sets field value
func (o *SetContractUriDto) SetProjectId(v string) {
	o.ProjectId = v
}

// GetCollectionId returns the CollectionId field value
func (o *SetContractUriDto) GetCollectionId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CollectionId
}

// GetCollectionIdOk returns a tuple with the CollectionId field value
// and a boolean to check if the value has been set.
func (o *SetContractUriDto) GetCollectionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CollectionId, true
}

// SetCollectionId sets field value
func (o *SetContractUriDto) SetCollectionId(v string) {
	o.CollectionId = v
}

// GetContractUri returns the ContractUri field value
func (o *SetContractUriDto) GetContractUri() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ContractUri
}

// GetContractUriOk returns a tuple with the ContractUri field value
// and a boolean to check if the value has been set.
func (o *SetContractUriDto) GetContractUriOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ContractUri, true
}

// SetContractUri sets field value
func (o *SetContractUriDto) SetContractUri(v string) {
	o.ContractUri = v
}

func (o SetContractUriDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SetContractUriDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["project_id"] = o.ProjectId
	toSerialize["collection_id"] = o.CollectionId
	toSerialize["contract_uri"] = o.ContractUri
	return toSerialize, nil
}

type NullableSetContractUriDto struct {
	value *SetContractUriDto
	isSet bool
}

func (v NullableSetContractUriDto) Get() *SetContractUriDto {
	return v.value
}

func (v *NullableSetContractUriDto) Set(val *SetContractUriDto) {
	v.value = val
	v.isSet = true
}

func (v NullableSetContractUriDto) IsSet() bool {
	return v.isSet
}

func (v *NullableSetContractUriDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSetContractUriDto(val *SetContractUriDto) *NullableSetContractUriDto {
	return &NullableSetContractUriDto{value: val, isSet: true}
}

func (v NullableSetContractUriDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSetContractUriDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


