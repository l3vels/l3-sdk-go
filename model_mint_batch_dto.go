/*
L3vels Api

L3vels API for Game developers

API version: 0.3
Contact: support@l3vels.xyz
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package l3vels-sdk

import (
	"encoding/json"
)

// checks if the MintBatchDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MintBatchDto{}

// MintBatchDto struct for MintBatchDto
type MintBatchDto struct {
	// Project Id
	ProjectId string `json:"project_id"`
	// Collection Id
	CollectionId string `json:"collection_id"`
	// Player address to mint token to
	PlayerAddress string `json:"player_address"`
	// Player ID to mint to. You can provide this or player_address
	PlayerId string `json:"player_id"`
	// Array of tokens to mint
	Assets []string `json:"assets"`
}

// NewMintBatchDto instantiates a new MintBatchDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMintBatchDto(projectId string, collectionId string, playerAddress string, playerId string, assets []string) *MintBatchDto {
	this := MintBatchDto{}
	this.ProjectId = projectId
	this.CollectionId = collectionId
	this.PlayerAddress = playerAddress
	this.PlayerId = playerId
	this.Assets = assets
	return &this
}

// NewMintBatchDtoWithDefaults instantiates a new MintBatchDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMintBatchDtoWithDefaults() *MintBatchDto {
	this := MintBatchDto{}
	return &this
}

// GetProjectId returns the ProjectId field value
func (o *MintBatchDto) GetProjectId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value
// and a boolean to check if the value has been set.
func (o *MintBatchDto) GetProjectIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProjectId, true
}

// SetProjectId sets field value
func (o *MintBatchDto) SetProjectId(v string) {
	o.ProjectId = v
}

// GetCollectionId returns the CollectionId field value
func (o *MintBatchDto) GetCollectionId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CollectionId
}

// GetCollectionIdOk returns a tuple with the CollectionId field value
// and a boolean to check if the value has been set.
func (o *MintBatchDto) GetCollectionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CollectionId, true
}

// SetCollectionId sets field value
func (o *MintBatchDto) SetCollectionId(v string) {
	o.CollectionId = v
}

// GetPlayerAddress returns the PlayerAddress field value
func (o *MintBatchDto) GetPlayerAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PlayerAddress
}

// GetPlayerAddressOk returns a tuple with the PlayerAddress field value
// and a boolean to check if the value has been set.
func (o *MintBatchDto) GetPlayerAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PlayerAddress, true
}

// SetPlayerAddress sets field value
func (o *MintBatchDto) SetPlayerAddress(v string) {
	o.PlayerAddress = v
}

// GetPlayerId returns the PlayerId field value
func (o *MintBatchDto) GetPlayerId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PlayerId
}

// GetPlayerIdOk returns a tuple with the PlayerId field value
// and a boolean to check if the value has been set.
func (o *MintBatchDto) GetPlayerIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PlayerId, true
}

// SetPlayerId sets field value
func (o *MintBatchDto) SetPlayerId(v string) {
	o.PlayerId = v
}

// GetAssets returns the Assets field value
func (o *MintBatchDto) GetAssets() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Assets
}

// GetAssetsOk returns a tuple with the Assets field value
// and a boolean to check if the value has been set.
func (o *MintBatchDto) GetAssetsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Assets, true
}

// SetAssets sets field value
func (o *MintBatchDto) SetAssets(v []string) {
	o.Assets = v
}

func (o MintBatchDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MintBatchDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["project_id"] = o.ProjectId
	toSerialize["collection_id"] = o.CollectionId
	toSerialize["player_address"] = o.PlayerAddress
	toSerialize["player_id"] = o.PlayerId
	toSerialize["assets"] = o.Assets
	return toSerialize, nil
}

type NullableMintBatchDto struct {
	value *MintBatchDto
	isSet bool
}

func (v NullableMintBatchDto) Get() *MintBatchDto {
	return v.value
}

func (v *NullableMintBatchDto) Set(val *MintBatchDto) {
	v.value = val
	v.isSet = true
}

func (v NullableMintBatchDto) IsSet() bool {
	return v.isSet
}

func (v *NullableMintBatchDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMintBatchDto(val *MintBatchDto) *NullableMintBatchDto {
	return &NullableMintBatchDto{value: val, isSet: true}
}

func (v NullableMintBatchDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMintBatchDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


