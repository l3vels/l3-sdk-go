/*
L3vels Api

L3vels API for Game developers

API version: 0.3
Contact: support@l3vels.xyz
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package l3vels-sdk

import (
	"encoding/json"
)

// checks if the SetSaleStatusDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SetSaleStatusDto{}

// SetSaleStatusDto struct for SetSaleStatusDto
type SetSaleStatusDto struct {
	// Project Id
	ProjectId string `json:"project_id"`
	// Collection Id
	CollectionId string `json:"collection_id"`
	// Sale Status of the contract
	SaleStatus map[string]interface{} `json:"sale_status"`
}

// NewSetSaleStatusDto instantiates a new SetSaleStatusDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSetSaleStatusDto(projectId string, collectionId string, saleStatus map[string]interface{}) *SetSaleStatusDto {
	this := SetSaleStatusDto{}
	this.ProjectId = projectId
	this.CollectionId = collectionId
	this.SaleStatus = saleStatus
	return &this
}

// NewSetSaleStatusDtoWithDefaults instantiates a new SetSaleStatusDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSetSaleStatusDtoWithDefaults() *SetSaleStatusDto {
	this := SetSaleStatusDto{}
	return &this
}

// GetProjectId returns the ProjectId field value
func (o *SetSaleStatusDto) GetProjectId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value
// and a boolean to check if the value has been set.
func (o *SetSaleStatusDto) GetProjectIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProjectId, true
}

// SetProjectId sets field value
func (o *SetSaleStatusDto) SetProjectId(v string) {
	o.ProjectId = v
}

// GetCollectionId returns the CollectionId field value
func (o *SetSaleStatusDto) GetCollectionId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CollectionId
}

// GetCollectionIdOk returns a tuple with the CollectionId field value
// and a boolean to check if the value has been set.
func (o *SetSaleStatusDto) GetCollectionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CollectionId, true
}

// SetCollectionId sets field value
func (o *SetSaleStatusDto) SetCollectionId(v string) {
	o.CollectionId = v
}

// GetSaleStatus returns the SaleStatus field value
func (o *SetSaleStatusDto) GetSaleStatus() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.SaleStatus
}

// GetSaleStatusOk returns a tuple with the SaleStatus field value
// and a boolean to check if the value has been set.
func (o *SetSaleStatusDto) GetSaleStatusOk() (map[string]interface{}, bool) {
	if o == nil {
		return map[string]interface{}{}, false
	}
	return o.SaleStatus, true
}

// SetSaleStatus sets field value
func (o *SetSaleStatusDto) SetSaleStatus(v map[string]interface{}) {
	o.SaleStatus = v
}

func (o SetSaleStatusDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SetSaleStatusDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["project_id"] = o.ProjectId
	toSerialize["collection_id"] = o.CollectionId
	toSerialize["sale_status"] = o.SaleStatus
	return toSerialize, nil
}

type NullableSetSaleStatusDto struct {
	value *SetSaleStatusDto
	isSet bool
}

func (v NullableSetSaleStatusDto) Get() *SetSaleStatusDto {
	return v.value
}

func (v *NullableSetSaleStatusDto) Set(val *SetSaleStatusDto) {
	v.value = val
	v.isSet = true
}

func (v NullableSetSaleStatusDto) IsSet() bool {
	return v.isSet
}

func (v *NullableSetSaleStatusDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSetSaleStatusDto(val *SetSaleStatusDto) *NullableSetSaleStatusDto {
	return &NullableSetSaleStatusDto{value: val, isSet: true}
}

func (v NullableSetSaleStatusDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSetSaleStatusDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


