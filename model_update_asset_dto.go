/*
L3vels Api

L3vels API for Game developers

API version: 0.3
Contact: support@l3vels.xyz
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package l3vels-sdk

import (
	"encoding/json"
)

// checks if the UpdateAssetDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateAssetDto{}

// UpdateAssetDto struct for UpdateAssetDto
type UpdateAssetDto struct {
	// The name of the asset.
	Name *string `json:"name,omitempty"`
	// The story of asset.
	Description *string `json:"description,omitempty"`
	// Price of asset
	Price *float32 `json:"price,omitempty"`
	// Supply of asset
	Supply *float32 `json:"supply,omitempty"`
	// Asset URL
	AssetUrl *string `json:"asset_url,omitempty"`
	// Custom props for asset.
	CustomProps map[string]interface{} `json:"custom_props,omitempty"`
	// Collection ID to find and update the asset in. Example: Update AK-47 asset in Weapons collection.
	CollectionId string `json:"collection_id"`
	// Game/project ID to update the asset in. Example: Call of Duty
	ProjectId string `json:"project_id"`
}

// NewUpdateAssetDto instantiates a new UpdateAssetDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateAssetDto(collectionId string, projectId string) *UpdateAssetDto {
	this := UpdateAssetDto{}
	this.CollectionId = collectionId
	this.ProjectId = projectId
	return &this
}

// NewUpdateAssetDtoWithDefaults instantiates a new UpdateAssetDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateAssetDtoWithDefaults() *UpdateAssetDto {
	this := UpdateAssetDto{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *UpdateAssetDto) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateAssetDto) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *UpdateAssetDto) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *UpdateAssetDto) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *UpdateAssetDto) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateAssetDto) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *UpdateAssetDto) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *UpdateAssetDto) SetDescription(v string) {
	o.Description = &v
}

// GetPrice returns the Price field value if set, zero value otherwise.
func (o *UpdateAssetDto) GetPrice() float32 {
	if o == nil || IsNil(o.Price) {
		var ret float32
		return ret
	}
	return *o.Price
}

// GetPriceOk returns a tuple with the Price field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateAssetDto) GetPriceOk() (*float32, bool) {
	if o == nil || IsNil(o.Price) {
		return nil, false
	}
	return o.Price, true
}

// HasPrice returns a boolean if a field has been set.
func (o *UpdateAssetDto) HasPrice() bool {
	if o != nil && !IsNil(o.Price) {
		return true
	}

	return false
}

// SetPrice gets a reference to the given float32 and assigns it to the Price field.
func (o *UpdateAssetDto) SetPrice(v float32) {
	o.Price = &v
}

// GetSupply returns the Supply field value if set, zero value otherwise.
func (o *UpdateAssetDto) GetSupply() float32 {
	if o == nil || IsNil(o.Supply) {
		var ret float32
		return ret
	}
	return *o.Supply
}

// GetSupplyOk returns a tuple with the Supply field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateAssetDto) GetSupplyOk() (*float32, bool) {
	if o == nil || IsNil(o.Supply) {
		return nil, false
	}
	return o.Supply, true
}

// HasSupply returns a boolean if a field has been set.
func (o *UpdateAssetDto) HasSupply() bool {
	if o != nil && !IsNil(o.Supply) {
		return true
	}

	return false
}

// SetSupply gets a reference to the given float32 and assigns it to the Supply field.
func (o *UpdateAssetDto) SetSupply(v float32) {
	o.Supply = &v
}

// GetAssetUrl returns the AssetUrl field value if set, zero value otherwise.
func (o *UpdateAssetDto) GetAssetUrl() string {
	if o == nil || IsNil(o.AssetUrl) {
		var ret string
		return ret
	}
	return *o.AssetUrl
}

// GetAssetUrlOk returns a tuple with the AssetUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateAssetDto) GetAssetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.AssetUrl) {
		return nil, false
	}
	return o.AssetUrl, true
}

// HasAssetUrl returns a boolean if a field has been set.
func (o *UpdateAssetDto) HasAssetUrl() bool {
	if o != nil && !IsNil(o.AssetUrl) {
		return true
	}

	return false
}

// SetAssetUrl gets a reference to the given string and assigns it to the AssetUrl field.
func (o *UpdateAssetDto) SetAssetUrl(v string) {
	o.AssetUrl = &v
}

// GetCustomProps returns the CustomProps field value if set, zero value otherwise.
func (o *UpdateAssetDto) GetCustomProps() map[string]interface{} {
	if o == nil || IsNil(o.CustomProps) {
		var ret map[string]interface{}
		return ret
	}
	return o.CustomProps
}

// GetCustomPropsOk returns a tuple with the CustomProps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateAssetDto) GetCustomPropsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.CustomProps) {
		return map[string]interface{}{}, false
	}
	return o.CustomProps, true
}

// HasCustomProps returns a boolean if a field has been set.
func (o *UpdateAssetDto) HasCustomProps() bool {
	if o != nil && !IsNil(o.CustomProps) {
		return true
	}

	return false
}

// SetCustomProps gets a reference to the given map[string]interface{} and assigns it to the CustomProps field.
func (o *UpdateAssetDto) SetCustomProps(v map[string]interface{}) {
	o.CustomProps = v
}

// GetCollectionId returns the CollectionId field value
func (o *UpdateAssetDto) GetCollectionId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CollectionId
}

// GetCollectionIdOk returns a tuple with the CollectionId field value
// and a boolean to check if the value has been set.
func (o *UpdateAssetDto) GetCollectionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CollectionId, true
}

// SetCollectionId sets field value
func (o *UpdateAssetDto) SetCollectionId(v string) {
	o.CollectionId = v
}

// GetProjectId returns the ProjectId field value
func (o *UpdateAssetDto) GetProjectId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value
// and a boolean to check if the value has been set.
func (o *UpdateAssetDto) GetProjectIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProjectId, true
}

// SetProjectId sets field value
func (o *UpdateAssetDto) SetProjectId(v string) {
	o.ProjectId = v
}

func (o UpdateAssetDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateAssetDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Price) {
		toSerialize["price"] = o.Price
	}
	if !IsNil(o.Supply) {
		toSerialize["supply"] = o.Supply
	}
	if !IsNil(o.AssetUrl) {
		toSerialize["asset_url"] = o.AssetUrl
	}
	if !IsNil(o.CustomProps) {
		toSerialize["custom_props"] = o.CustomProps
	}
	toSerialize["collection_id"] = o.CollectionId
	toSerialize["project_id"] = o.ProjectId
	return toSerialize, nil
}

type NullableUpdateAssetDto struct {
	value *UpdateAssetDto
	isSet bool
}

func (v NullableUpdateAssetDto) Get() *UpdateAssetDto {
	return v.value
}

func (v *NullableUpdateAssetDto) Set(val *UpdateAssetDto) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateAssetDto) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateAssetDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateAssetDto(val *UpdateAssetDto) *NullableUpdateAssetDto {
	return &NullableUpdateAssetDto{value: val, isSet: true}
}

func (v NullableUpdateAssetDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateAssetDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


