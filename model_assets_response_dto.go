/*
L3vels Api

L3vels API for Game developers

API version: 0.3
Contact: support@l3vels.xyz
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package l3vels-sdk

import (
	"encoding/json"
)

// checks if the AssetsResponseDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AssetsResponseDto{}

// AssetsResponseDto struct for AssetsResponseDto
type AssetsResponseDto struct {
	// Number of assets to return per page
	Items []Asset `json:"items"`
	// Number of total items
	Total float32 `json:"total"`
	// Number of items to return per page
	Limit float32 `json:"limit"`
	// Page number
	Page float32 `json:"page"`
}

// NewAssetsResponseDto instantiates a new AssetsResponseDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAssetsResponseDto(items []Asset, total float32, limit float32, page float32) *AssetsResponseDto {
	this := AssetsResponseDto{}
	this.Items = items
	this.Total = total
	this.Limit = limit
	this.Page = page
	return &this
}

// NewAssetsResponseDtoWithDefaults instantiates a new AssetsResponseDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAssetsResponseDtoWithDefaults() *AssetsResponseDto {
	this := AssetsResponseDto{}
	return &this
}

// GetItems returns the Items field value
func (o *AssetsResponseDto) GetItems() []Asset {
	if o == nil {
		var ret []Asset
		return ret
	}

	return o.Items
}

// GetItemsOk returns a tuple with the Items field value
// and a boolean to check if the value has been set.
func (o *AssetsResponseDto) GetItemsOk() ([]Asset, bool) {
	if o == nil {
		return nil, false
	}
	return o.Items, true
}

// SetItems sets field value
func (o *AssetsResponseDto) SetItems(v []Asset) {
	o.Items = v
}

// GetTotal returns the Total field value
func (o *AssetsResponseDto) GetTotal() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Total
}

// GetTotalOk returns a tuple with the Total field value
// and a boolean to check if the value has been set.
func (o *AssetsResponseDto) GetTotalOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Total, true
}

// SetTotal sets field value
func (o *AssetsResponseDto) SetTotal(v float32) {
	o.Total = v
}

// GetLimit returns the Limit field value
func (o *AssetsResponseDto) GetLimit() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Limit
}

// GetLimitOk returns a tuple with the Limit field value
// and a boolean to check if the value has been set.
func (o *AssetsResponseDto) GetLimitOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Limit, true
}

// SetLimit sets field value
func (o *AssetsResponseDto) SetLimit(v float32) {
	o.Limit = v
}

// GetPage returns the Page field value
func (o *AssetsResponseDto) GetPage() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Page
}

// GetPageOk returns a tuple with the Page field value
// and a boolean to check if the value has been set.
func (o *AssetsResponseDto) GetPageOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Page, true
}

// SetPage sets field value
func (o *AssetsResponseDto) SetPage(v float32) {
	o.Page = v
}

func (o AssetsResponseDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AssetsResponseDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["items"] = o.Items
	toSerialize["total"] = o.Total
	toSerialize["limit"] = o.Limit
	toSerialize["page"] = o.Page
	return toSerialize, nil
}

type NullableAssetsResponseDto struct {
	value *AssetsResponseDto
	isSet bool
}

func (v NullableAssetsResponseDto) Get() *AssetsResponseDto {
	return v.value
}

func (v *NullableAssetsResponseDto) Set(val *AssetsResponseDto) {
	v.value = val
	v.isSet = true
}

func (v NullableAssetsResponseDto) IsSet() bool {
	return v.isSet
}

func (v *NullableAssetsResponseDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAssetsResponseDto(val *AssetsResponseDto) *NullableAssetsResponseDto {
	return &NullableAssetsResponseDto{value: val, isSet: true}
}

func (v NullableAssetsResponseDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAssetsResponseDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


