/*
L3vels Api

L3vels API for Game developers

API version: 0.3
Contact: support@l3vels.xyz
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package l3vels-sdk

import (
	"encoding/json"
)

// checks if the MintDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MintDto{}

// MintDto struct for MintDto
type MintDto struct {
	// Contract ID
	ContractId *string `json:"contract_id,omitempty"`
	// Game/project ID. Example: Call of Duty
	ProjectId string `json:"project_id"`
	// Collection ID to use. Example: Characters, Weapons, etc.
	CollectionId string `json:"collection_id"`
	// Player address to mint token to. You can provide player ID or player address
	PlayerAddress *string `json:"player_address,omitempty"`
	// Player ID to mint to. You can provide player ID or player address
	PlayerId *string `json:"player_id,omitempty"`
	Asset MintDtoAsset `json:"asset"`
}

// NewMintDto instantiates a new MintDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMintDto(projectId string, collectionId string, asset MintDtoAsset) *MintDto {
	this := MintDto{}
	this.ProjectId = projectId
	this.CollectionId = collectionId
	this.Asset = asset
	return &this
}

// NewMintDtoWithDefaults instantiates a new MintDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMintDtoWithDefaults() *MintDto {
	this := MintDto{}
	return &this
}

// GetContractId returns the ContractId field value if set, zero value otherwise.
func (o *MintDto) GetContractId() string {
	if o == nil || IsNil(o.ContractId) {
		var ret string
		return ret
	}
	return *o.ContractId
}

// GetContractIdOk returns a tuple with the ContractId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MintDto) GetContractIdOk() (*string, bool) {
	if o == nil || IsNil(o.ContractId) {
		return nil, false
	}
	return o.ContractId, true
}

// HasContractId returns a boolean if a field has been set.
func (o *MintDto) HasContractId() bool {
	if o != nil && !IsNil(o.ContractId) {
		return true
	}

	return false
}

// SetContractId gets a reference to the given string and assigns it to the ContractId field.
func (o *MintDto) SetContractId(v string) {
	o.ContractId = &v
}

// GetProjectId returns the ProjectId field value
func (o *MintDto) GetProjectId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value
// and a boolean to check if the value has been set.
func (o *MintDto) GetProjectIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProjectId, true
}

// SetProjectId sets field value
func (o *MintDto) SetProjectId(v string) {
	o.ProjectId = v
}

// GetCollectionId returns the CollectionId field value
func (o *MintDto) GetCollectionId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CollectionId
}

// GetCollectionIdOk returns a tuple with the CollectionId field value
// and a boolean to check if the value has been set.
func (o *MintDto) GetCollectionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CollectionId, true
}

// SetCollectionId sets field value
func (o *MintDto) SetCollectionId(v string) {
	o.CollectionId = v
}

// GetPlayerAddress returns the PlayerAddress field value if set, zero value otherwise.
func (o *MintDto) GetPlayerAddress() string {
	if o == nil || IsNil(o.PlayerAddress) {
		var ret string
		return ret
	}
	return *o.PlayerAddress
}

// GetPlayerAddressOk returns a tuple with the PlayerAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MintDto) GetPlayerAddressOk() (*string, bool) {
	if o == nil || IsNil(o.PlayerAddress) {
		return nil, false
	}
	return o.PlayerAddress, true
}

// HasPlayerAddress returns a boolean if a field has been set.
func (o *MintDto) HasPlayerAddress() bool {
	if o != nil && !IsNil(o.PlayerAddress) {
		return true
	}

	return false
}

// SetPlayerAddress gets a reference to the given string and assigns it to the PlayerAddress field.
func (o *MintDto) SetPlayerAddress(v string) {
	o.PlayerAddress = &v
}

// GetPlayerId returns the PlayerId field value if set, zero value otherwise.
func (o *MintDto) GetPlayerId() string {
	if o == nil || IsNil(o.PlayerId) {
		var ret string
		return ret
	}
	return *o.PlayerId
}

// GetPlayerIdOk returns a tuple with the PlayerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MintDto) GetPlayerIdOk() (*string, bool) {
	if o == nil || IsNil(o.PlayerId) {
		return nil, false
	}
	return o.PlayerId, true
}

// HasPlayerId returns a boolean if a field has been set.
func (o *MintDto) HasPlayerId() bool {
	if o != nil && !IsNil(o.PlayerId) {
		return true
	}

	return false
}

// SetPlayerId gets a reference to the given string and assigns it to the PlayerId field.
func (o *MintDto) SetPlayerId(v string) {
	o.PlayerId = &v
}

// GetAsset returns the Asset field value
func (o *MintDto) GetAsset() MintDtoAsset {
	if o == nil {
		var ret MintDtoAsset
		return ret
	}

	return o.Asset
}

// GetAssetOk returns a tuple with the Asset field value
// and a boolean to check if the value has been set.
func (o *MintDto) GetAssetOk() (*MintDtoAsset, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Asset, true
}

// SetAsset sets field value
func (o *MintDto) SetAsset(v MintDtoAsset) {
	o.Asset = v
}

func (o MintDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MintDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ContractId) {
		toSerialize["contract_id"] = o.ContractId
	}
	toSerialize["project_id"] = o.ProjectId
	toSerialize["collection_id"] = o.CollectionId
	if !IsNil(o.PlayerAddress) {
		toSerialize["player_address"] = o.PlayerAddress
	}
	if !IsNil(o.PlayerId) {
		toSerialize["player_id"] = o.PlayerId
	}
	toSerialize["asset"] = o.Asset
	return toSerialize, nil
}

type NullableMintDto struct {
	value *MintDto
	isSet bool
}

func (v NullableMintDto) Get() *MintDto {
	return v.value
}

func (v *NullableMintDto) Set(val *MintDto) {
	v.value = val
	v.isSet = true
}

func (v NullableMintDto) IsSet() bool {
	return v.isSet
}

func (v *NullableMintDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMintDto(val *MintDto) *NullableMintDto {
	return &NullableMintDto{value: val, isSet: true}
}

func (v NullableMintDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMintDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


