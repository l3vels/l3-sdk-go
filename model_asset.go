/*
L3vels Api

L3vels API for Game developers

API version: 0.3
Contact: support@l3vels.xyz
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package l3vels-sdk

import (
	"encoding/json"
	"time"
)

// checks if the Asset type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Asset{}

// Asset struct for Asset
type Asset struct {
	// The unique identifier for the asset entity.
	Id string `json:"id"`
	// The token id of the asset.
	TokenId float32 `json:"token_id"`
	// The name of the asset.
	Name string `json:"name"`
	// ID of the parent asset.
	ParentId string `json:"parent_id"`
	// Custom properties of the asset.
	Properties map[string]interface{} `json:"properties"`
	// Custom attributes of the asset.
	Attributes map[string]interface{} `json:"attributes"`
	// The description of the asset.
	Description string `json:"description"`
	// The status of the asset.
	Status string `json:"status"`
	// The price of the asset.
	Price float32 `json:"price"`
	// The supply of the asset.
	Supply float32 `json:"supply"`
	// The minted amount of the asset.
	MintedAmount float32 `json:"minted_amount"`
	// The asset type. Can be main or nested.
	AssetType string `json:"asset_type"`
	// The asset URL.
	AssetUrl string `json:"asset_url"`
	// Additional images associated with the asset, such as screenshots or promotional images.
	Medias []string `json:"medias"`
	// The main or featured image associated with the asset. You can set it from the Dashboard as main image.
	MainMedia string `json:"main_media"`
	// The unique identifier of the account that the Collection belongs to.
	AccountId float32 `json:"account_id"`
	// The unique identifier of the project that the asset is associated with. This allows developers to organize their assets by project and helps with tracking and reporting.
	ProjectId string `json:"project_id"`
	// The unique identifier of the collection that the asset is associated with. This allows developers to organize their collections by project and helps with tracking and reporting.
	CollectionId string `json:"collection_id"`
	// The date when the collection was created.
	CreatedOn time.Time `json:"created_on"`
	// The date when the collection was last modified.
	ModifiedOn time.Time `json:"modified_on"`
	// The Id of the user who created the collection.
	CreatedBy float32 `json:"created_by"`
	// The Id of the user who last modified the collection.
	ModifiedBy float32 `json:"modified_by"`
}

// NewAsset instantiates a new Asset object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAsset(id string, tokenId float32, name string, parentId string, properties map[string]interface{}, attributes map[string]interface{}, description string, status string, price float32, supply float32, mintedAmount float32, assetType string, assetUrl string, medias []string, mainMedia string, accountId float32, projectId string, collectionId string, createdOn time.Time, modifiedOn time.Time, createdBy float32, modifiedBy float32) *Asset {
	this := Asset{}
	this.Id = id
	this.TokenId = tokenId
	this.Name = name
	this.ParentId = parentId
	this.Properties = properties
	this.Attributes = attributes
	this.Description = description
	this.Status = status
	this.Price = price
	this.Supply = supply
	this.MintedAmount = mintedAmount
	this.AssetType = assetType
	this.AssetUrl = assetUrl
	this.Medias = medias
	this.MainMedia = mainMedia
	this.AccountId = accountId
	this.ProjectId = projectId
	this.CollectionId = collectionId
	this.CreatedOn = createdOn
	this.ModifiedOn = modifiedOn
	this.CreatedBy = createdBy
	this.ModifiedBy = modifiedBy
	return &this
}

// NewAssetWithDefaults instantiates a new Asset object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAssetWithDefaults() *Asset {
	this := Asset{}
	return &this
}

// GetId returns the Id field value
func (o *Asset) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *Asset) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *Asset) SetId(v string) {
	o.Id = v
}

// GetTokenId returns the TokenId field value
func (o *Asset) GetTokenId() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.TokenId
}

// GetTokenIdOk returns a tuple with the TokenId field value
// and a boolean to check if the value has been set.
func (o *Asset) GetTokenIdOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TokenId, true
}

// SetTokenId sets field value
func (o *Asset) SetTokenId(v float32) {
	o.TokenId = v
}

// GetName returns the Name field value
func (o *Asset) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *Asset) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *Asset) SetName(v string) {
	o.Name = v
}

// GetParentId returns the ParentId field value
func (o *Asset) GetParentId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ParentId
}

// GetParentIdOk returns a tuple with the ParentId field value
// and a boolean to check if the value has been set.
func (o *Asset) GetParentIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ParentId, true
}

// SetParentId sets field value
func (o *Asset) SetParentId(v string) {
	o.ParentId = v
}

// GetProperties returns the Properties field value
func (o *Asset) GetProperties() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Properties
}

// GetPropertiesOk returns a tuple with the Properties field value
// and a boolean to check if the value has been set.
func (o *Asset) GetPropertiesOk() (map[string]interface{}, bool) {
	if o == nil {
		return map[string]interface{}{}, false
	}
	return o.Properties, true
}

// SetProperties sets field value
func (o *Asset) SetProperties(v map[string]interface{}) {
	o.Properties = v
}

// GetAttributes returns the Attributes field value
func (o *Asset) GetAttributes() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Attributes
}

// GetAttributesOk returns a tuple with the Attributes field value
// and a boolean to check if the value has been set.
func (o *Asset) GetAttributesOk() (map[string]interface{}, bool) {
	if o == nil {
		return map[string]interface{}{}, false
	}
	return o.Attributes, true
}

// SetAttributes sets field value
func (o *Asset) SetAttributes(v map[string]interface{}) {
	o.Attributes = v
}

// GetDescription returns the Description field value
func (o *Asset) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *Asset) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *Asset) SetDescription(v string) {
	o.Description = v
}

// GetStatus returns the Status field value
func (o *Asset) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *Asset) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *Asset) SetStatus(v string) {
	o.Status = v
}

// GetPrice returns the Price field value
func (o *Asset) GetPrice() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Price
}

// GetPriceOk returns a tuple with the Price field value
// and a boolean to check if the value has been set.
func (o *Asset) GetPriceOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Price, true
}

// SetPrice sets field value
func (o *Asset) SetPrice(v float32) {
	o.Price = v
}

// GetSupply returns the Supply field value
func (o *Asset) GetSupply() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Supply
}

// GetSupplyOk returns a tuple with the Supply field value
// and a boolean to check if the value has been set.
func (o *Asset) GetSupplyOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Supply, true
}

// SetSupply sets field value
func (o *Asset) SetSupply(v float32) {
	o.Supply = v
}

// GetMintedAmount returns the MintedAmount field value
func (o *Asset) GetMintedAmount() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.MintedAmount
}

// GetMintedAmountOk returns a tuple with the MintedAmount field value
// and a boolean to check if the value has been set.
func (o *Asset) GetMintedAmountOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MintedAmount, true
}

// SetMintedAmount sets field value
func (o *Asset) SetMintedAmount(v float32) {
	o.MintedAmount = v
}

// GetAssetType returns the AssetType field value
func (o *Asset) GetAssetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AssetType
}

// GetAssetTypeOk returns a tuple with the AssetType field value
// and a boolean to check if the value has been set.
func (o *Asset) GetAssetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AssetType, true
}

// SetAssetType sets field value
func (o *Asset) SetAssetType(v string) {
	o.AssetType = v
}

// GetAssetUrl returns the AssetUrl field value
func (o *Asset) GetAssetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AssetUrl
}

// GetAssetUrlOk returns a tuple with the AssetUrl field value
// and a boolean to check if the value has been set.
func (o *Asset) GetAssetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AssetUrl, true
}

// SetAssetUrl sets field value
func (o *Asset) SetAssetUrl(v string) {
	o.AssetUrl = v
}

// GetMedias returns the Medias field value
func (o *Asset) GetMedias() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Medias
}

// GetMediasOk returns a tuple with the Medias field value
// and a boolean to check if the value has been set.
func (o *Asset) GetMediasOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Medias, true
}

// SetMedias sets field value
func (o *Asset) SetMedias(v []string) {
	o.Medias = v
}

// GetMainMedia returns the MainMedia field value
func (o *Asset) GetMainMedia() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MainMedia
}

// GetMainMediaOk returns a tuple with the MainMedia field value
// and a boolean to check if the value has been set.
func (o *Asset) GetMainMediaOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MainMedia, true
}

// SetMainMedia sets field value
func (o *Asset) SetMainMedia(v string) {
	o.MainMedia = v
}

// GetAccountId returns the AccountId field value
func (o *Asset) GetAccountId() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value
// and a boolean to check if the value has been set.
func (o *Asset) GetAccountIdOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountId, true
}

// SetAccountId sets field value
func (o *Asset) SetAccountId(v float32) {
	o.AccountId = v
}

// GetProjectId returns the ProjectId field value
func (o *Asset) GetProjectId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value
// and a boolean to check if the value has been set.
func (o *Asset) GetProjectIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProjectId, true
}

// SetProjectId sets field value
func (o *Asset) SetProjectId(v string) {
	o.ProjectId = v
}

// GetCollectionId returns the CollectionId field value
func (o *Asset) GetCollectionId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CollectionId
}

// GetCollectionIdOk returns a tuple with the CollectionId field value
// and a boolean to check if the value has been set.
func (o *Asset) GetCollectionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CollectionId, true
}

// SetCollectionId sets field value
func (o *Asset) SetCollectionId(v string) {
	o.CollectionId = v
}

// GetCreatedOn returns the CreatedOn field value
func (o *Asset) GetCreatedOn() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedOn
}

// GetCreatedOnOk returns a tuple with the CreatedOn field value
// and a boolean to check if the value has been set.
func (o *Asset) GetCreatedOnOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedOn, true
}

// SetCreatedOn sets field value
func (o *Asset) SetCreatedOn(v time.Time) {
	o.CreatedOn = v
}

// GetModifiedOn returns the ModifiedOn field value
func (o *Asset) GetModifiedOn() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.ModifiedOn
}

// GetModifiedOnOk returns a tuple with the ModifiedOn field value
// and a boolean to check if the value has been set.
func (o *Asset) GetModifiedOnOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ModifiedOn, true
}

// SetModifiedOn sets field value
func (o *Asset) SetModifiedOn(v time.Time) {
	o.ModifiedOn = v
}

// GetCreatedBy returns the CreatedBy field value
func (o *Asset) GetCreatedBy() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value
// and a boolean to check if the value has been set.
func (o *Asset) GetCreatedByOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedBy, true
}

// SetCreatedBy sets field value
func (o *Asset) SetCreatedBy(v float32) {
	o.CreatedBy = v
}

// GetModifiedBy returns the ModifiedBy field value
func (o *Asset) GetModifiedBy() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.ModifiedBy
}

// GetModifiedByOk returns a tuple with the ModifiedBy field value
// and a boolean to check if the value has been set.
func (o *Asset) GetModifiedByOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ModifiedBy, true
}

// SetModifiedBy sets field value
func (o *Asset) SetModifiedBy(v float32) {
	o.ModifiedBy = v
}

func (o Asset) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Asset) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["token_id"] = o.TokenId
	toSerialize["name"] = o.Name
	toSerialize["parent_id"] = o.ParentId
	toSerialize["properties"] = o.Properties
	toSerialize["attributes"] = o.Attributes
	toSerialize["description"] = o.Description
	toSerialize["status"] = o.Status
	toSerialize["price"] = o.Price
	toSerialize["supply"] = o.Supply
	toSerialize["minted_amount"] = o.MintedAmount
	toSerialize["asset_type"] = o.AssetType
	toSerialize["asset_url"] = o.AssetUrl
	toSerialize["medias"] = o.Medias
	toSerialize["main_media"] = o.MainMedia
	toSerialize["account_id"] = o.AccountId
	toSerialize["project_id"] = o.ProjectId
	toSerialize["collection_id"] = o.CollectionId
	toSerialize["created_on"] = o.CreatedOn
	toSerialize["modified_on"] = o.ModifiedOn
	toSerialize["created_by"] = o.CreatedBy
	toSerialize["modified_by"] = o.ModifiedBy
	return toSerialize, nil
}

type NullableAsset struct {
	value *Asset
	isSet bool
}

func (v NullableAsset) Get() *Asset {
	return v.value
}

func (v *NullableAsset) Set(val *Asset) {
	v.value = val
	v.isSet = true
}

func (v NullableAsset) IsSet() bool {
	return v.isSet
}

func (v *NullableAsset) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAsset(val *Asset) *NullableAsset {
	return &NullableAsset{value: val, isSet: true}
}

func (v NullableAsset) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAsset) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


